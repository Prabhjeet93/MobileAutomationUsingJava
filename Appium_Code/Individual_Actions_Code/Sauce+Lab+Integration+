import java.net.URL;
import java.util.List;
import java.util.Random;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.ios.IOSDriver;


public class SauceLabIntegration {

    private AppiumDriver driver;

    private List<Integer> values;

    private static final int MINIMUM = 0;
    private static final int MAXIMUM = 10;

   

    @Before
    public void setUp() throws Exception {
       
    	
    	DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability(CapabilityType.BROWSER_NAME, "");
        capabilities.setCapability("platformVersion", "7.1");
        capabilities.setCapability("deviceName", "iPhone Simulator");
        capabilities.setCapability("platformName", "iOS");
        capabilities.setCapability("appiumVersion", "1.2.2");
   //   capabilities.setCapability("app", "http://appium.s3.amazonaws.com/TestApp6.0.app.zip");

        capabilities.setCapability("app", "http://way2automation.com/app/EmployeeDirectory.zip");
        
      this.driver = new IOSDriver(
              new URL("http://ramanahuja1413:4a4c790d-617d-480a-ab9e-d2c3e75861b5@ondemand.saucelabs.com:80/wd/hub"),
              capabilities);
      
      Thread.sleep(20000);
    }

    @After
    public void tearDown() throws Exception {
        driver.quit();
    }

    private void populate() {
        //populate text fields with two random number
        List<WebElement> elems = driver.findElementsByClassName("UIATextField");
        Random random = new Random();
        for (WebElement elem : elems) {
            int rndNum = random.nextInt(MAXIMUM - MINIMUM + 1) + MINIMUM;
            elem.sendKeys(String.valueOf(rndNum));
            values.add(rndNum);
        }
    }

    @Test
    public void testUIComputation() throws Exception {

       /* // populate text fields with values
        populate();
        // trigger computation by using the button
        WebElement button = driver.findElementByClassName("UIAButton");
        button.click();
        // is sum equal ?
        WebElement texts = driver.findElementByClassName("UIAStaticText");
    */   // assertEquals(String.valueOf(values.get(0) + values.get(1)), texts.getText());
    }

    
}